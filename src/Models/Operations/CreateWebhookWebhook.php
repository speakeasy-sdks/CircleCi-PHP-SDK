<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace CircleCi\Models\Operations;


/**
 * CreateWebhookWebhook - A webhook
 * 
 * @package CircleCi\Models\Operations
 * @access public
 */
class CreateWebhookWebhook
{
    /**
     * The date and time the webhook was created.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created-at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * Events that will trigger the webhook
     * 
     * @var array<\CircleCi\Models\Operations\CreateWebhookWebhookEventsEnum> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<enum<CircleCi\Models\Operations\CreateWebhookWebhookEventsEnum>>')]
    public array $events;
    
    /**
     * The unique ID of the webhook
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Name of the webhook
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The scope in which the relevant events that will trigger webhooks
     * 
     * @var \CircleCi\Models\Operations\CreateWebhookWebhookScope $scope
     */
	#[\JMS\Serializer\Annotation\SerializedName('scope')]
    #[\JMS\Serializer\Annotation\Type('CircleCi\Models\Operations\CreateWebhookWebhookScope')]
    public CreateWebhookWebhookScope $scope;
    
    /**
     * Masked value of the secret used to build an HMAC hash of the payload and passed as a header in the webhook request
     * 
     * @var string $signingSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('signing-secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $signingSecret;
    
    /**
     * The date and time the webhook was last updated.
     * 
     * @var \DateTime $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated-at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
    /**
     * URL to deliver the webhook to. Note: protocol must be included as well (only https is supported)
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * Whether to enforce TLS certificate verification when delivering the webhook
     * 
     * @var bool $verifyTls
     */
	#[\JMS\Serializer\Annotation\SerializedName('verify-tls')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $verifyTls;
    
	public function __construct()
	{
		$this->createdAt = new \DateTime();
		$this->events = [];
		$this->id = "";
		$this->name = "";
		$this->scope = new \CircleCi\Models\Operations\CreateWebhookWebhookScope();
		$this->signingSecret = "";
		$this->updatedAt = new \DateTime();
		$this->url = "";
		$this->verifyTls = false;
	}
}
