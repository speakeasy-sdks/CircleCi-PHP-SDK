<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace CircleCi\Models\Operations;

use \CircleCi\Utils\SpeakeasyMetadata;
class GetProjectWorkflowsPageDataRequest
{
    /**
     * The names of VCS branches to include in branch-level workflow metrics.
     * 
     * @var ?\CircleCi\Models\Operations\GetProjectWorkflowsPageDataBranches $branches
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=branches')]
    public ?GetProjectWorkflowsPageDataBranches $branches = null;
    
    /**
     * Project slug in the form `vcs-slug/org-name/repo-name`. The `/` characters may be URL-escaped.
     * 
     * @var string $projectSlug
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=project-slug')]
    public string $projectSlug;
    
    /**
     * The time window used to calculate summary metrics.
     * 
     * @var ?\CircleCi\Models\Operations\GetProjectWorkflowsPageDataReportingWindow $reportingWindow
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=reporting-window')]
    public ?GetProjectWorkflowsPageDataReportingWindow $reportingWindow = null;
    
    /**
     * The names of workflows to include in workflow-level metrics.
     * 
     * @var ?\CircleCi\Models\Operations\GetProjectWorkflowsPageDataWorkflowNames $workflowNames
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=workflow-names')]
    public ?GetProjectWorkflowsPageDataWorkflowNames $workflowNames = null;
    
	public function __construct()
	{
		$this->branches = null;
		$this->projectSlug = "";
		$this->reportingWindow = null;
		$this->workflowNames = null;
	}
}
