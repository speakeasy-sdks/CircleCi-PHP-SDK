<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace CircleCi\Models\Operations;


/**
 * CreateWebhookRequestBody - The parameters for a create webhook request
 * 
 * @package CircleCi\Models\Operations
 * @access public
 */
class CreateWebhookRequestBody
{
    /**
     * Events that will trigger the webhook
     * 
     * @var array<\CircleCi\Models\Operations\CreateWebhookRequestBodyEvents> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<enum<CircleCi\Models\Operations\CreateWebhookRequestBodyEvents>>')]
    public array $events;
    
    /**
     * Name of the webhook
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The scope in which the relevant events that will trigger webhooks
     * 
     * @var \CircleCi\Models\Operations\CreateWebhookRequestBodyScope $scope
     */
	#[\JMS\Serializer\Annotation\SerializedName('scope')]
    #[\JMS\Serializer\Annotation\Type('CircleCi\Models\Operations\CreateWebhookRequestBodyScope')]
    public CreateWebhookRequestBodyScope $scope;
    
    /**
     * Secret used to build an HMAC hash of the payload and passed as a header in the webhook request
     * 
     * @var string $signingSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('signing-secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $signingSecret;
    
    /**
     * URL to deliver the webhook to. Note: protocol must be included as well (only https is supported)
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * Whether to enforce TLS certificate verification when delivering the webhook
     * 
     * @var bool $verifyTls
     */
	#[\JMS\Serializer\Annotation\SerializedName('verify-tls')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $verifyTls;
    
	public function __construct()
	{
		$this->events = [];
		$this->name = "";
		$this->scope = new \CircleCi\Models\Operations\CreateWebhookRequestBodyScope();
		$this->signingSecret = "";
		$this->url = "";
		$this->verifyTls = false;
	}
}
