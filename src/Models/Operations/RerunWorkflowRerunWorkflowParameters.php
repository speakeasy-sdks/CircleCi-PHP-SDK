<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace CircleCi\Models\Operations;


/**
 * RerunWorkflowRerunWorkflowParameters - The information you can supply when rerunning a workflow.
 * 
 * @package CircleCi\Models\Operations
 * @access public
 */
class RerunWorkflowRerunWorkflowParameters
{
    /**
     * Whether to enable SSH access for the triggering user on the newly-rerun job. Requires the jobs parameter to be used and so is mutually exclusive with the from_failed parameter.
     * 
     * @var ?bool $enableSsh
     */
	#[\JMS\Serializer\Annotation\SerializedName('enable_ssh')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableSsh = null;
    
    /**
     * Whether to rerun the workflow from the failed job. Mutually exclusive with the jobs parameter.
     * 
     * @var ?bool $fromFailed
     */
	#[\JMS\Serializer\Annotation\SerializedName('from_failed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $fromFailed = null;
    
    /**
     * A list of job IDs to rerun.
     * 
     * @var ?array<string> $jobs
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobs')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $jobs = null;
    
    /**
     * Completes rerun using sparse trees logic, an optimization for workflows that have disconnected subgraphs. Requires jobs parameter and so is mutually exclusive with the from_failed parameter.
     * 
     * @var ?bool $sparseTree
     */
	#[\JMS\Serializer\Annotation\SerializedName('sparse_tree')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $sparseTree = null;
    
	public function __construct()
	{
		$this->enableSsh = null;
		$this->fromFailed = null;
		$this->jobs = null;
		$this->sparseTree = null;
	}
}
